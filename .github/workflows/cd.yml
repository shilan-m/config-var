name: Deployment
on:
  push:
    branches: ['develop','main']

concurrency: cd-${{ github.ref }}

jobs:
  get-env:
    runs-on: ubuntu-latest
    outputs:
      output: ${{ steps.concat.outputs.data }}
    steps:
      - id: step1
        if: endsWith(github.ref, '/develop')
        run: echo "data=staging" >> "$GITHUB_OUTPUT"
      - id: step2
        if: endsWith(github.ref, '/main')
        run: echo "data=production" >> "$GITHUB_OUTPUT"
      - id: concat
        run: echo "data=${{ steps.step1.outputs.data }}${{ steps.step2.outputs.data }}" >> "$GITHUB_OUTPUT"

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: get-env
    environment: ${{needs.get-env.outputs.output}}
    env:
      FORGE_EMAIL: ${{ vars.FORGE_EMAIL }}
      FORGE_API_TOKEN: ${{ secrets.FORGE_API_TOKEN }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js and install dependencies
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: check consolidation 2
        run: echo "The value of OUTPUT is $OUTPUT" 
        env:
          OUTPUT: ${{needs.get-env.outputs.output}}

      - name: check consolidation 1
        run: echo "The value of FORGE_EMAIL is $FORGE_EMAIL" 

  job1:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      output1: ${{ steps.step1.outputs.test }}
      output2: ${{ steps.step2.outputs.test }}
    steps:
      - id: step1
        run: echo "test=hello" >> "$GITHUB_OUTPUT"
      - id: step2
        run: echo "test=world" >> "$GITHUB_OUTPUT"
  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - env:
          OUTPUT1: ${{needs.job1.outputs.output1}}
          OUTPUT2: ${{needs.job1.outputs.output2}}
        run: echo "$OUTPUT1 $OUTPUT2"